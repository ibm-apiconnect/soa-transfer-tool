{
	"en":
	{
		"usageHeader": "soatt - Transfer Services from WebSphere Service Registry and Repository (WSRR) to IBM API Connect v5 - Version {0}",
		"startup":"SOA Transfer Tool - Transfer Services from WebSphere Service Registry and Repository (WSRR) to IBM API Connect v5 - Version {0}",
		"version": "Get Build version",
		"nl": "<language>",
		"help": "Command usage",
		"reviewlogs":"Process logs to a more readable format, can be supplied with a file location to process a given file",
		"outputDirectory": "Specify directory for output files for later upload. Required for transfer modes 2 and 4. If defined for transfer mode=1 then this overrides input directory value",
		"inputDirectory": "Specify directory containing files for upload to API Connect. Required for transfer modes 3 and 4. This value is ignored for transfer mode 1",
		"wsrrTestConnection": "Perform test connection for WSRR Server",
		"apicTestConnection": "Perform test connection for APIC Server through the APIC CLI",
		"transferMode": "Specify mode of transfer of Services from WebSphere Service Registry and Repository(WSRR) to API Connect(APIC)\nModes:\n1. Generate and upload service metadata from WSRR into APIC\n2. Generate swagger documents from WSRR for later upload to APIC(via 3)\n3. Upload generated swagger documents from the local filesystem into APIC\n4. From WSDLs on the local file system, generate swagger documents for later upload into APIC\n5. Execute a custom plugin to generate generate swagger documents for later upload to APIC. The name of the plugin must be provided after the mode number\nA bsrURI can be supplied for modes 1 and 2 to target a given Service regardless of organization. Mode 5 accepts an input value after the plugin name, but can be null if the plugin does not require it\n-o is required for modes 2, 4 and 5\n-i is required for modes 3 and 4, it is optional for mode 5",
		"comparisonMode": "Compare two generated swagger files, requires the paths to both files",
		"connectionPropertiesFile":"Path to connection properties file",
		"diagnosticmode":"Diagnostic mode to help in given situations, Available modes [1,2,3]. Mode 1 aids in diagnosis the generation of API and product Yaml, Mode 2 aids in analysising log buffers relating to downloaded WSRR contents.\nMode 3 lists all the plugins that the tool can find in the plugins folder\nMode 1 requires the Business Service bsrURI, the Service Version bsrURI and the path to write the data to",
		"diagnosticModeInvalidNumOfArgs":"The number of arugments provided for diagnosticMode {0}, is incorrect, check what arguments are required before rerunning",
		"invalidDiagnosticMode":"Diagnostic mode {0}, is invalid, modes [1,2,3] are only valid modes",
		"toolversion":"{0} Transfer Tool version {1}",
		"cliargumentprocessingfailure":"An error occured while the tool was processing the arguments with the error: {0}",
		"wsrrtestconnectionfailure": "Connection to WSRR failed, please review connection details and previous messages in the log to determine the cause of the error",
		"wsrrtestconnectionsuccess": "Connection to WSRR successful",
		"wsrrRequestTimeout": "The request to WSRR timed out after {0} ms",
		"wsrrErrorParsingDocument": "An error occurred parsing the document '{0}', error: {1}",
		"wsrrErrorSerializingDocument": "An error occurred serializing the document '{0}', error: {1}",
		"apicconnectiontestsuccessful":"Connection to API Connect Server successful",
		"apicconnectiontestfailed":"Connection to API Connect Server failed, review the log to determine cause of the failure",
		"apicdevportaltimeout": "The request to the APIC Developer Portal has timed out after {0}ms",
		"apicdevportaltestsuccessful":"Connection to API Connect Developer Portal successful",
		"apicdevportaltestfailed":"Connection to API Connect Developer Portal failed, review the logs to determine cause of the failure",
		"apicdevportalconnectionfailedCatalog":"The organization or catalog for the organization does not exist, The organization and catalog are retrieved from the apiIdentifier",
		"apicdevportalconnectionfailedCredentials":"The Credentials provided to access Developer Portal for the catalog are invalid, check that the user can access the catalogs developer portal and that the provided credentials are correct",
		"apicdevportalmutlipleorgswithsamename":"Mutliple Consumer organizations with the name {0} have been found, the organization with the id of {1} is being used. To ensure the correct organization is used use the ID of the organization",
		"apicdevportalmutlipleorgswithsamenameadditionalids":"The IDs of the organisations with the same name : {0}",
		"testconnectiontestssuccessful":"Tests connections for APIC and WSRR have been passed",
		"testconnectiontestsfailed":"Test connection of WSRR or APIC failed, review logs for error messages",
		"testconnectiontestsfailed2":"Use the test connection modes to check that connections are working before retrying transfer",
		"unexpectedprecheckfailure":"An unexpected error occured while performing pre-checks for transfer mode {0}. Review error messages for the cause of the failure",
		"connectionfailedfirst":"The connection to server {0} has failed. Retrying connection.",
		"connectionfailedretry":"The connection to server {0} has failed. Retrying connection. Retry attempt {1} of {2}",
		"connectionfailedend":"The connection to server {0} has failed. Retry attempts have been exceeded. Review the following error message and above debug statements for causes of the failures",
		"apicrunfailed":"Unable to execute the apic command, ensure that the apiconnect toolkit has been installed, is on the path and that the user has permission to run it",
		"startdownload":"Starting to download data from WSRR Server",
		"wsrrinvalidversion":"The version of WSRR is unsupported, WSRR 7.5.x, 8.0.x and 8.5.x are the supported versions",
		"invalid.mode.combination.test":"A test connection mode has been specified with an incompatible mode, test connection modes cannot be specified with an operations mode",
		"invalid.transfer.mode.value":"The value specified for the transfer mode of {0} is invalid. The valid options are 1,2 or 3",
		"invalidbsrURIprovided":"The bsrURI {0} does not match the required format of a bsrURI, verify the value that has been provided",
		"apicDevPortalMissingConfiguration":"Missing configuration for the API Developer. Check the following are specified: apiDeveloperUsername, apiDeveloperPassword, apiDeveloperOrgName, apiDeveloperHost, apicVersion, apiIdentifier.",
		"wsrrMissingConfiguration":"Missing configuration for WSRR. Check the following are specified: wsrrHostname, wsrrPort, wsrrProtocol.",
		"wsrrMissingSecurityConfiguration":"Missing security configuration for WSRR. HTTPS is enabled. Check the following are specified: wsrrUsername, wsrrPassword.",
		"apicCLIMissingConfiguration":"Missing configuration for the API Manager. Check the following are specified: apiUsername, apiPassword, apiVersion, apiIdentifier.",
		"errorSendRequestToWSRR": "An error occurred sending a request to WSRR.",
		"errorTimeoutConnectingToWSRR": "An timeout error occurred connecting to WSRR. Ensure WSRR is available and responding to requests.",
		"wsrrErrorTransferVersionToDraft":"An error occurred while transferring version '{0} ({1})' to drafts. Error: {2}",
		"wsrrErrorNoWSDLOnVersion":"Unable to find WSDL on version '{0}'",
		"wsrrErrorNoWSDLInDirectory":"Unable to find WSDL in directory '{0}'",
		"wsrrErrorTransferWSDLToFilesystem":"An error occurred while transferring WSDL in directory '{0}' to the file system. Error: {1}",
		"wsrrNoOrganisationDefined":"A WSRR Organisation has not been defined, to retrieve data from WSRR an organisation must be defined in properties file in the property 'wsrrOrg'",
		"noOutputDirectoryDefined":"An output directory must be specified using '-o <filepath>' for transfer mode {0}",
		"noOutputDirectoryDefinedComparison": "An output file must be specified using '-o <filepath>' for comparison mode",
		"noInputDirectoryDefined":"An input directory must be specified using '-i <file path> for transfer mode {0}",
		"inputDirectoryDoesNotExist":"The input directory {0} does not exist",
		"inputDirectoryEmpty":"The input directory {0} is empty",
		"missingPluginName": "Name of the plugin to be executed must be provided",
		"transferModePrecheckFail":"An error occurred during prechecks for transfer mode {0}. Review messages to determine cause of failure. Multiple errors may be present and all will require resolving",
		"warning":"WARNING",
		"apicErrorRunningCommand": "An error occurred invoking the APIC toolkit. APIC toolkit command error: {0}. Output from the APIC toolkit: {1}",
		"apicErrorRunningCommandFromDir": "An error occurred invoking the APIC toolkit. APIC toolkit command error: {0}. Working directory: {1}. Output from the APIC toolkit: {2}",
		"apicToolkitVersion":"APIC Toolkit version: {0}",
		"apicToolkitTimeout":"A Timeout occured trying to run the APIC toolkit after {0}ms.",
		"apicToolkitLicenseNotAccepted":"The most likely cause is that the APIC Toolkit is requesting user input, run apic and provide an input for the requested operation.\nIf the toolkit produces no messages, the timeout will be as a result of the time taken to start Node and the toolkit. In the configuration add apicToolkitTimeout=<timeout> and give it a value greater then 60000",
		"badHTTPcode": "Bad HTTP return code '{0}' body '{1}'",
		"apicErrorRunning1": "An error occurred invoking the APIC toolkit.",
		"apicErrorRunning2": "APIC toolkit command executed:",
		"apicErrorRunning3": "Start output from the APIC toolkit:",
		"apicErrorRunning4": "End output from the APIC toolkit.",
		"apicErrorRunning5": "Working directory: {0}",
		"apicErrorEmptyResult":"The apic command did not return any output. Review trouble shooting document for help diagnosising the issue",
		"apicOrgNotFound": "The developer organization '{0}' was not found. Check that the developer organization exists for the Catalog used.",
		"responseParseError": "Error parsing the response",
		"requestError": "Error from request",
		"flowFetchSLDsForVersion" : "Fetching SLDs for version with name '{0}' version '{1}' bsrURI '{2}' using query 'SLDsForServiceVersion'",
		"flowFetchedSLDs" : "Fetched SLDs for version",
		"flowFetchingEndpointsForSLD" : "Fetching endpoints for SLDs",
		"flowFetchingConsumersForSLDs" : "Fetching consumers for SLDs",
		"flowFetchingSOAPEndpointsForSLD" : "Fetching SOAP endpoints for SLD with name '{0}' bsrURI '{1}' using query 'SOAPEndpointsForSLD'",
		"flowFetchingRESTEndpointsForSLD" : "Fetching REST endpoints for SLD with name '{0}' bsrURI '{1}' using query 'RESTEndpointsForSLD'",
		"flowFetchedEndpoints" : "Fetched endpoints for all SLDs",
		"flowFetchNoSLDsFound" : "No SLDs found so not fetching endpoints",
		"flowFetchingBSForSV" : "Fetching business service for service version '{0}' using query 'BusinessServiceForServiceVersion'",
		"flowNoBS": "Did not find a business service, query: {0}",
		"flowFetchedBS" : "Fetched business service",
		"flowFetchingVersion" : "Fetching version '{0}' directly",
		"flowFetchedVersion" : "Fetched version",
		"flowFetchingSLDsAndEndpoints": "Fetching SLDs and endpoints for version with name '{0}' version '{1}' bsrURI '{2}'",
		"flowFetchedSLDsAndEndpoints": "Fetched SLDs and endpoints",
		"flowNoEndpointsService": "No endpoints found, stopping now.",
		"flowErrorNoEndpoints" : "No endpoints found",
		"flowFetchingWSDLs" : "Fetching WSDLs and XSDs for version with name '{0}' version '{1}' bsrURI '{2}' using initial query 'WSDLForServiceVersion'",
		"flowFetchedWSDLs" : "Fetched WSDLs and XSDs",
		"flowFetchingSwagger": "Fetching Interface documents for version with name '{0}' version '{1}' bsrURI '{2}' using initial query 'RESTInterfaceDocumentsForServiceVersion'",
		"flowFetchedSwagger" : "Fetched Interface documents",
		"flowFetchedMultipleSwagger" : "Fetched multiple interface documents, using the first, name '{0}'",
		"flowNotFetchedSwagger" : "Fetch Interface documents did not find any Swagger",
		"flowGeneratingYaml" : "Generating YAML using WSRR data",
		"flowStoringYaml" : "Storing YAML",
		"flowCreatingWSDLYaml" : "Creating WSDL YAML from WSDL",
		"flowCreatingRESTYaml" : "Creating REST YAML",
		"flowCreatingAPIYaml" : "Creating final SOAP API YAML",
		"flowCreatingRESTAPIYaml" : "Creating final REST API YAML",
		"flowSavingAPIYaml" : "Saving final SOAP API YAML",
		"flowValidatingProduct" : "Validating Product",
		"flowCreatingConsumers": "Creating consumers YAML",
		"flowValidatingConsumers": "Validating consumers YAML",
		"flowStoringConsumers": "Storing consumers YAML",
		"flowPushingProductToDrafts" : "Pushing Product with name '{0}' version '{1}' to API Connect drafts",
		"flowPublishingProductToCatalog": "Publishing Product with name '{0}' version '{1}' to API Connect Catalog '{2}'",
		"flowPublishingProductToCatalogSpace": "Publishing Product with name '{0}' version '{1}' to API Connect Catalog '{2}' and Space '{3}'",
		"flowErrorPublishingProductToCatalog": "An error occurred publishing Product with name '{0}' version '{1}' to API Connect Catalog '{2}'",
		"flowErrorCleaningUpProductToCatalog": "Removing previously published Product in API Connect Catalogs",
		"flowErrorFinishedCleaningUpProductToCatalog": "Finished removing previously published Product in API Connect Catalogs",
		"flowRetiringProductInCatalog": "Retiring product with name '{0}' version '{1}' in API Connect Catalog '{2}'",
		"flowRetiringProductInSpace": "Retiring product with name '{0}' version '{1}' in API Connect Space '{2}:{3}'",
		"flowDeletingProductInCatalog": "Deleting product with name '{0}' version '{1}' in API Connect Catalog '{2}'",
		"flowDeletingProductInSpace": "Deleting product with name '{0}' version '{1}' in API Connect Space '{2}:{3}'",
		"flowErrorRemovingProductInCatalog": "An error occurred removing Product with name '{0}' version '{1}' in API Connect Catalog '{2}'",
		"flowErrorRemovingProductInSpace": "An error occurred removing Product with name '{0}' version '{1}' in API Connect Space '{2}:{3}'",
		"flowCreatingConsumersInCatalog": "Creating consumers in API Connect Catalog '{0}'",
		"flowCreatingConsumerInCatalog": "Creating consumer with name '{0}' in API Connect Catalog '{1}' and developer organization '{2}'",
		"flowCreatedConsumersInCatalog": "Created consumers in API Connect Catalog '{0}'",
		"flowRemovingSubscriptionsInCatalog": "Removing extra subscriptions for Product with name '{0}' version '{1}' in API Connect Catalog '{2}' and developer organization '{3}'",
		"flowRemovingSubscriptionInCatalog": "Removing subscription from App '{0}' to Product with name '{1}' version '{2}' in API Connect Catalog '{3}' and developer organization '{4}'",
		"flowErrorCreatingConsumersInCatalog": "An error occurred creating consumers in API Connect Catalog '{0}'",
		"flowErrorCleaningUpConsumersInCatalog": "Removing previously created consumers in API Connect Catalogs",
		"flowErrorCleaningUpConsumersInCatalogSpecific": "Removing previously created consumers in API Connect Catalog '{0}' and developer organization '{1}'",
		"flowErrorCleaningUpUndoSubscriptionDelete": "Undoing delete of subscription from Application '{0}' to Product",
		"flowErrorCleaningUpUndoSubscriptionCreate": "Undoing creation of subscription from Application '{0}' to Product",
		"flowErrorCleaningUpUndoSubscriptionUpdateClientID": "Undoing update of client ID in Application '{0}'",
		"flowErrorCleaningUpUndoSubscriptionUpdateDescription": "Undoing update of description in Application '{0}'",
		"flowErrorCleaningUpUndoSubscriptionAppCreate": "Undoing creation of Application '{0}'",
		"flowErrorCleaningUpUndoSubscriptionError": "An error occurred removing previously created consumers. Continuing. The error was: '{0}'",
		"flowErrorFinishedCleaningUpConsumersInCatalog": "Finished removing previously created consumers in API Connect Catalogs",
		"flowErrorProductNotFound": "An error occurred retrieving the product with name '{0'} and version '{1}' in catalog '{2}' and developer organization '{3}', the product was not found",
		"flowProcessingConsumers": "Processing consumers for product with name '{0}' and version '{1}' in Catalog '{2}' and developer organization '{3}'",
		"flowDuplicateConsumer": "A duplicate consumer with name '{0}' product name '{1}' plan name '{2}' was detected and will not be created in API Connect Catalog '{3}'",
		"flowFetchingVersions": "Fetching versions for business service with name '{0}' bsrURI '{1}' using query 'ServiceVersionsForBusinessService'",
		"flowNoVersions" : "Did not find any versions",
		"flowNoVersionsError" : "Did not find any versions, query: {0}",
		"flowFetchedVersions": "Fetched versions, count: {0}",
		"flowProcessingVersion" : "Processing version {0} of {1}",
		"flowProcessingVersionDetails": "Processing version with name '{0}' bsrURI '{1}'",
		"flowProcessedVersions": "Processed all versions",
		"flowProcessedWsdls": "Processed all WSDL directories",
		"flowFetchingBSForOrg" : "Fetching business services for organization '{0}' using query 'BusinessServiceByOwningOrg'",
		"flowFetchingBSForSV": "Fetching business service for service version with name '{0}' version '{1}' bsrURI '{2}' using query 'BusinessServiceForServiceVersion'",
		"flowFetchedBSForSV": "Fetched business service with with name '{0}' version '{1}' bsrURI '{2}' for service version",
		"flowFetchingSV": "Fetching service version with bsrURI '{0}'",
		"flowFetchingFileSystem": "Fetching business services from file system location '{0}'",
		"flowFetchingWsdlFileSystem": "Fetching WSDLs from file system location '{0}'",
		"flowNoBSsLog": "Did not find any business services",
		"flowNoWsdlsLog": "Did not find any WSDL directories",
		"flowNoBSs": "Did not find any business services, query: {0}",
		"flowNoBSsFile": "Did not find any business services, file path: {0}",
		"flowNoSV": "Did not find the service version, bsrURI: {0}",
		"flowFetchedBSs": "Fetched business services, count: {0}",
		"flowFetchedWsdls": "Fetched WSDL directories, count: {0}",
		"flowProcessingBS" : "Processing business service {0} of {1}",
		"flowProcessedBSs": "Processed all business services",
		"flowProcessedSV": "Processed service version",
		"flowProcessingSLA" : "Processing SLA {0} of {1} for SLD with name '{2}' bsrURI '{3}'",
		"flowFetchWSDLsForId" : "Fetching WSDLs and XSDs for directory '{0}'",
		"flowFetchingConsumerSLAsForSLD": "Fetching consumer SLAs for SLD with name '{0}' bsrURI '{1}' using query 'ConsumingSLAsForSLD'",
		"flowFetchingConsumerVersionsForSLA": "Fetching consumer versions for SLA with name '{0}' bsrURI '{1}' and owning organization name '{2}' using query 'ConsumingVersionsForSLA'",
		"flowFetchingConsumerVersionsForSLASingleSV": "Fetching consumer versions for SLA with name '{0}' bsrURI '{1}' using query 'ConsumingVersionsForSLASingleSV'",
		"flowFetchingOwningCapabilityForVersion": "Fetching owning capability for version with name '{0}' version '{1}' bsrURI '{2}' using query 'OwningCapabilityForVersion'",
		"flowFetchingOwningOrganization": "Fetching owning organization for entity with name '{0}' version '{1}' bsrURI '{2}' using query 'OwningOrganizationForEntity'",
		"templatingErrorNoTemplate": "Unable to find template for: {0}",
		"errorUnrecognisedExtension": "An error occurred parsing the swagger document '{0}', unable to recognise the file name extension. It should be .yaml .yml or .json",
		"errorRetrievingDirectoryContents":"Unable to retrieve contents of directory {0}, review errors to determine cause of failure",
		"errorNoDevOrgNameForCatalog": "An error occurred finding the developer organization name for catalog '{0}' in the configuration. Ensure a configuration exists with name 'apiDeveloperOrgName_{0}' and value of the developer organization name.",
		"errorConsumersValidate": "An error occurred validating the consumers YAML: {0}",
		"errorConsumersValidateMultiple": "Errors occurred validating the consumers YAML: {0}",
		"errorConsumersValidateVersion": "'consumersDetails' must be present and have value '1.0.0'.",
		"errorConsumersValidateProductName": "'productName' must be present and have a non empty value.",
		"errorConsumersValidateProductVersion": "'productVersion' must be present and have a value.",
		"errorConsumersValidateConsumers": "'consumers' must be present and be an array.",
		"errorConsumersValidateConsumerName": "The consumer 'name' must be present and have a non empty value, for consumer: {0} .",
		"errorConsumersValidateConsumerDescription": "The consumer 'description' must be present and have a value, for consumer: {0} .",
		"errorConsumersValidateConsumerClientID": "The consumer 'clientID' must be present and have a value, for consumer: {0} .",
		"errorConsumersValidateConsumerDuplicateClientID": "The consumer 'duplicateClientID' must be present and have a value, for consumer: {0} .",
		"errorConsumersValidateConsumerPlanName": "The consumer 'planName' must be present and have a non empty value, for consumer: {0} .",
		"errorConsumersValidateConsumerPlanNameInvalid": "The consumer 'planName' references an unknown plan in the Product. Plan name: '{0}', available plans: '{1}', consumer: {2} .",
		"selectLogFileNum":"Enter the Number of the log file to review, enter 0 to skip",
		"logFileNumber":"The number must be and integer between 0 and {0}",
		"unableToRetrieveLogFile":"Unable to locate log file {0}",
		"logFileAction":"Select Action to perform on file:\n1. Show processed log in console\n2. Process log to file",
		"logFileActionError":"The number must be either 1 or 2 to select the action to perform on the file",
		"processedLogFileError":"An error has occured trying to generate the processed log file, review the log for further messages",
		"fileReadPermissionDenied":"Permission denied reading {0}, check permissions and adjust to read file",
		"logFileNotFound":"No such file or directory {0}, ensure that the path provided is correct",
		"logFileGenericError":"An error occured while trying to read file {0}, review following messages for the cause of the failure",
		"logEmptyDirectory":"The directory {0}, does not contain any wsrrtoapic log files",
		"logUnableToRetrieveDirectoryContentsGeneric":"Unable to retrieve contents directory {0} because of error: {1}",
		"errorPluginLoading": "An error occurred loading the plugin '{0}': {1}",
		"errorPluginsLoading": "An error occurred loading the plugins: {0}",
		"errorPluginNotFound": "The plugin named '{0}' was not found. Specify the name of a plugin that is loaded.",
		"errorPluginRunning": "An error occurred running the plugin '{0}': {1}",
		"pluginsList": "Plugins loaded:",
		"pluginsEmptyList": "No plugins loaded.",
		"pluginsListItem": "Plugin name '{0}'",
		"wsdlWarningFileFoundInRoot": "Warning: the file named '{0}' was found in the input directory and will be ignored.",
		"unsupportedDocumentEncoding": "The downloaded document {0} is encoded with an unsupported encoding and cannot be processed",
		"incorrectNumberOfFiles": "Comparison mode requires 2 files to operate",
		"unableToOpenFile": "Unable to open file on path '{0}', review errors to deteremine cause of failure",
		"compareFilesIdentical": "The two files provided are identical",
		"compareTypeUndefined": "Key '{0}'='{1}' was not found in object {2}",
		"compareDifferenceFound": "Key '{0}.{1}' has been found to be different. object1 {1}='{2}', object2 {1}={3}",
		"compareTypeEndpointBsrURIURLNotFound": "Endpoint with the bsrURI of {0} and url {1} not found in object{2}",
		"compareTypeArrayItemNotFound": "{2}.{0} item value {1} not found in object{3}",
		"compareTypeSLDNotFound": "SLD with bsrURI={0} not found in object{1}",
		"compareEndpointUrlFoundBsrURIMismatch": "Found endpoints with url='{0}', but bsrURIs do not match, comparing these endpoints",
		"compareEndpointMatchFound": "No differences found for Endpoint with bsrURI={0}",
		"compareEndpointsNoDifferencesFound": "No differences found for any of the endpoints"
	}
}
